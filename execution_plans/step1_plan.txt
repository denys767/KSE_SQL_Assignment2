-> Sort: total_spent DESC  (actual time=50922..50934 rows=145977 loops=1)
    -> Stream results  (actual time=50713..50851 rows=145977 loops=1)
        -> Group aggregate: count(distinct order_items.order_id), sum(order_totals.order_amount), group_concat(distinct categories.category_name separator ', ')  (actual time=50713..50811 rows=145977 loops=1)
            -> Sort: c.customer_id, c.first_name, c.last_name  (actual time=50713..50729 rows=246997 loops=1)
                -> Stream results  (cost=253e+6 rows=2.53e+9) (actual time=41852..50542 rows=246997 loops=1)
                    -> Nested loop left join  (cost=253e+6 rows=2.53e+9) (actual time=41852..50455 rows=246997 loops=1)
                        -> Nested loop inner join  (cost=51932 rows=50279) (actual time=6446..14626 rows=157848 loops=1)
                            -> Filter: (ot.customer_id is not null)  (cost=0.113..5659 rows=50279) (actual time=6446..6475 rows=157848 loops=1)
                                -> Table scan on ot  (cost=2.5..2.5 rows=0) (actual time=6446..6465 rows=157848 loops=1)
                                    -> Materialize CTE order_totals  (cost=0..0 rows=0) (actual time=6446..6446 rows=157848 loops=1)
                                        -> Table scan on <temporary>  (actual time=6428..6437 rows=157848 loops=1)
                                            -> Aggregate using temporary table  (actual time=6428..6428 rows=157848 loops=1)
                                                -> Nested loop inner join  (cost=183874 rows=50280) (actual time=1.53..6181 rows=213357 loops=1)
                                                    -> Nested loop inner join  (cost=130359 rows=50280) (actual time=1.36..1411 rows=213357 loops=1)
                                                        -> Filter: ((orders.`status` = 'completed') and (orders.order_date >= <cache>((curdate() - interval 1 year))))  (cost=95386 rows=33211) (actual time=0.947..458 rows=333394 loops=1)
                                                            -> Table scan on orders  (cost=95386 rows=996438) (actual time=0.936..292 rows=1e+6 loops=1)
                                                        -> Index lookup on oi using PRIMARY (order_id=orders.order_id)  (cost=0.902 rows=1.51) (actual time=0.00245..0.00275 rows=0.64 loops=333394)
                                                    -> Single-row index lookup on p using PRIMARY (product_id=oi.product_id)  (cost=0.964 rows=1) (actual time=0.0222..0.0222 rows=1 loops=213357)
                            -> Single-row index lookup on c using PRIMARY (customer_id=ot.customer_id)  (cost=0.82 rows=1) (actual time=0.0515..0.0515 rows=1 loops=157848)
                        -> Index lookup on cc using <auto_key0> (customer_id=ot.customer_id)  (cost=249412..249414 rows=10) (actual time=0.226..0.227 rows=1.56 loops=157848)
                            -> Materialize CTE customer_categories  (cost=249412..249412 rows=50280) (actual time=35405..35405 rows=213263 loops=1)
                                -> Table scan on <temporary>  (cost=243753..244384 rows=50280) (actual time=35272..35292 rows=213263 loops=1)
                                    -> Temporary table with deduplication  (cost=243753..243753 rows=50280) (actual time=35272..35272 rows=213263 loops=1)
                                        -> Nested loop inner join  (cost=238725 rows=50280) (actual time=1.81..34889 rows=213357 loops=1)
                                            -> Nested loop inner join  (cost=183904 rows=50280) (actual time=1.48..14528 rows=213357 loops=1)
                                                -> Nested loop inner join  (cost=130389 rows=50280) (actual time=1.21..2082 rows=213357 loops=1)
                                                    -> Filter: ((orders.`status` = 'completed') and (orders.order_date >= <cache>((curdate() - interval 1 year))))  (cost=95386 rows=33211) (actual time=0.936..887 rows=333394 loops=1)
                                                        -> Table scan on orders  (cost=95386 rows=996438) (actual time=0.927..592 rows=1e+6 loops=1)
                                                    -> Covering index lookup on oi using PRIMARY (order_id=orders.order_id)  (cost=0.903 rows=1.51) (actual time=0.00281..0.00345 rows=0.64 loops=333394)
                                                -> Filter: (p.category_id is not null)  (cost=0.964 rows=1) (actual time=0.0581..0.0582 rows=1 loops=213357)
                                                    -> Single-row index lookup on p using PRIMARY (product_id=oi.product_id)  (cost=0.964 rows=1) (actual time=0.0579..0.0579 rows=1 loops=213357)
                                            -> Single-row index lookup on cat using PRIMARY (category_id=p.category_id)  (cost=0.99 rows=1) (actual time=0.0952..0.0952 rows=1 loops=213357)

time in seconds = 50.9 seconds