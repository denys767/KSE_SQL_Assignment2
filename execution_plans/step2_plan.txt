-> Sort: total_spent DESC  (actual time=0.0162..0.0162 rows=0 loops=1)
    -> Stream results  (actual time=0.0148..0.0148 rows=0 loops=1)
        -> Group aggregate: count(distinct orders.order_id), sum(order_totals.order_amount), group_concat(distinct categories.category_name separator ', ')  (actual time=0.0142..0.0142 rows=0 loops=1)
            -> Sort: c.customer_id, c.first_name, c.last_name  (actual time=0.0135..0.0135 rows=0 loops=1)
                -> Stream results  (cost=1.12 rows=0.75) (actual time=0.01..0.01 rows=0 loops=1)
                    -> Nested loop inner join  (cost=1.12 rows=0.75) (actual time=0.0092..0.0092 rows=0 loops=1)
                        -> Nested loop left join  (cost=0.877 rows=0.25) (actual time=0.0085..0.0085 rows=0 loops=1)
                            -> Nested loop inner join  (cost=0.768 rows=0.167) (actual time=0.0084..0.0084 rows=0 loops=1)
                                -> Filter: (orders.customer_id is not null)  (cost=0.71 rows=0.167) (actual time=0.0081..0.0081 rows=0 loops=1)
                                    -> Index range scan on orders using idx_orders_date_status over ('2024-05-30 00:00:00' <= order_date AND 'completed' <= status), with index condition: ((orders.`status` = 'completed') and (orders.order_date >= <cache>((curdate() - interval 1 year))))  (cost=0.71 rows=1) (actual time=0.0077..0.0077 rows=0 loops=1)
                                -> Single-row index lookup on c using PRIMARY (customer_id=orders.customer_id)  (cost=0.85 rows=1) (never executed)
                            -> Index lookup on cc using <auto_key0> (customer_id=orders.customer_id)  (cost=4.99..5.84 rows=2) (never executed)
                                -> Materialize CTE customer_categories  (cost=4.14..4.14 rows=1.5) (never executed)
                                    -> Table scan on <temporary>  (cost=3.15..3.99 rows=1.5) (never executed)
                                        -> Temporary table with deduplication  (cost=1.48..1.48 rows=1.5) (never executed)
                                            -> Nested loop inner join  (cost=1.33 rows=1.5) (never executed)
                                                -> Nested loop inner join  (cost=1.11 rows=1.5) (never executed)
                                                    -> Nested loop inner join  (cost=0.902 rows=1.5) (never executed)
                                                        -> Index range scan on o using idx_orders_date_status over ('2024-05-30 00:00:00' <= order_date AND 'completed' <= status), with index condition: ((o.`status` = 'completed') and (o.order_date >= <cache>((curdate() - interval 1 year))))  (cost=0.71 rows=1) (never executed)
                                                        -> Covering index lookup on oi using idx_order_items_product (order_id=o.order_id)  (cost=1.15 rows=1.5) (never executed)
                                                    -> Filter: (p.category_id is not null)  (cost=0.65 rows=1) (never executed)
                                                        -> Covering index lookup on p using idx_products_category (product_id=oi.product_id)  (cost=0.65 rows=1) (never executed)
                                                -> Covering index lookup on cat using idx_categories_name (category_id=p.category_id)  (cost=0.65 rows=1) (never executed)
                        -> Index lookup on ot using <auto_key0> (order_id=orders.order_id)  (cost=8.3..8.85 rows=2) (never executed)
                            -> Materialize CTE order_totals  (cost=7.75..7.75 rows=3) (never executed)
                                -> Group aggregate: sum((oi.quantity * p.price))  (cost=7.45 rows=3) (never executed)
                                    -> Nested loop inner join  (cost=6.55 rows=9) (never executed)
                                        -> Index scan on oi using idx_order_items_product  (cost=3.4 rows=9) (never executed)
                                        -> Index lookup on p using idx_products_category (product_id=oi.product_id)  (cost=0.261 rows=1) (never executed)

Query block execution time: 0.016 seconds
